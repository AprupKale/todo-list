(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>p});var t=r(537),a=r.n(t),o=r(645),i=r.n(o),c=r(667),s=r.n(c),A=new URL(r(648),r.b),l=new URL(r(287),r.b),d=i()(a()),u=s()(A),f=s()(l);d.push([n.id,`@font-face {\n    font-family: 'Barlow';\n    src: url(${u}) format('truetype');\n}\n\n@font-face {\n    font-family: 'Caveat';\n    src: url(${f}) format('truetype');\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    overflow: auto;\n    cursor: default;\n}\n\n*::-webkit-scrollbar {\n    display: none;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr 9fr;\n    grid-template-columns: 2fr 5fr;\n}\n\nh1 {\n    font-size: calc(calc(3vw + 5vh) / 1.5);\n}\n\nh2 {\n    font-size: calc(calc(3vw + 5vh) / 3);\n}\n\nh3 {\n    font-size: calc(calc(3vw + 5vh) / 4);\n}\n\n.header {\n    background-color: #277da1;\n    grid-column: 1 / 3;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    font-family: 'Caveat';\n}\n\n.header>* {\n    display: inline-block;\n    padding: calc((3vw + 5vh) / 6);\n}\n\n.header>img {\n    width: calc((3vw + 5vh) / 1.5);\n    height: auto;\n}\n\n.sidebar {\n    background-color: rgb(39, 125, 161, 0.7);\n    font-family: 'Barlow';\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n}\n\n.sidebar div {\n    margin-top: calc(calc(3vw + 5vh) / 5);\n    padding-left: 5%;\n    padding-top: 2.5%;\n    padding-bottom: 2.5%;\n    box-sizing: border-box;\n}\n\n.sidebar .division {\n    width: 100%;\n}\n\n.sidebar .division>* {\n    display: inline-block;\n}\n\n.sidebar>.division>img {\n    width: calc(calc(3vw + 5vh) / 3);\n    height: auto;\n    margin: 0 calc(calc(3vw + 5vh) / 3);\n}\n\n.sidebar .projects div {\n    margin-top: calc(calc(3vw + 5vh) / 6);\n    padding-left: 5%;\n    margin-left: 5%\n}\n\n.sidebar .projects {\n    width: 100%;\n}\n\n.sidebar .projects .division {\n    width: 100%;\n}\n\n.sidebar .projects .division>* {\n    display: inline-block;\n}\n\n.sidebar>.projects>.division>img {\n    width: calc(calc(3vw + 5vh) / 4);\n    height: auto;\n    margin: 0 calc(calc(3vw + 5vh) / 4);\n}\n\n.sidebar .division:hover {\n    background-color: #577590;\n}\n\n.sidebar .selected {\n    background-color: #577590;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,+DAAqD;AACzD;;AAEA;IACI,qBAAqB;IACrB,+DAAsD;AAC1D;;AAEA;IACI,SAAS;IACT,UAAU;IACV,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,wCAAwC;IACxC,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,2BAA2B;AAC/B;;AAEA;IACI,qCAAqC;IACrC,gBAAgB;IAChB,iBAAiB;IACjB,oBAAoB;IACpB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,gCAAgC;IAChC,YAAY;IACZ,mCAAmC;AACvC;;AAEA;IACI,qCAAqC;IACrC,gBAAgB;IAChB;AACJ;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,gCAAgC;IAChC,YAAY;IACZ,mCAAmC;AACvC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["@font-face {\r\n    font-family: 'Barlow';\r\n    src: url(./fonts/Barlow-Light.ttf) format('truetype');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Caveat';\r\n    src: url(./fonts/Caveat-Medium.ttf) format('truetype');\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: auto;\r\n    cursor: default;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\nbody {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: grid;\r\n    grid-template-rows: 1fr 9fr;\r\n    grid-template-columns: 2fr 5fr;\r\n}\r\n\r\nh1 {\r\n    font-size: calc(calc(3vw + 5vh) / 1.5);\r\n}\r\n\r\nh2 {\r\n    font-size: calc(calc(3vw + 5vh) / 3);\r\n}\r\n\r\nh3 {\r\n    font-size: calc(calc(3vw + 5vh) / 4);\r\n}\r\n\r\n.header {\r\n    background-color: #277da1;\r\n    grid-column: 1 / 3;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    font-family: 'Caveat';\r\n}\r\n\r\n.header>* {\r\n    display: inline-block;\r\n    padding: calc((3vw + 5vh) / 6);\r\n}\r\n\r\n.header>img {\r\n    width: calc((3vw + 5vh) / 1.5);\r\n    height: auto;\r\n}\r\n\r\n.sidebar {\r\n    background-color: rgb(39, 125, 161, 0.7);\r\n    font-family: 'Barlow';\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.sidebar div {\r\n    margin-top: calc(calc(3vw + 5vh) / 5);\r\n    padding-left: 5%;\r\n    padding-top: 2.5%;\r\n    padding-bottom: 2.5%;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.sidebar .division {\r\n    width: 100%;\r\n}\r\n\r\n.sidebar .division>* {\r\n    display: inline-block;\r\n}\r\n\r\n.sidebar>.division>img {\r\n    width: calc(calc(3vw + 5vh) / 3);\r\n    height: auto;\r\n    margin: 0 calc(calc(3vw + 5vh) / 3);\r\n}\r\n\r\n.sidebar .projects div {\r\n    margin-top: calc(calc(3vw + 5vh) / 6);\r\n    padding-left: 5%;\r\n    margin-left: 5%\r\n}\r\n\r\n.sidebar .projects {\r\n    width: 100%;\r\n}\r\n\r\n.sidebar .projects .division {\r\n    width: 100%;\r\n}\r\n\r\n.sidebar .projects .division>* {\r\n    display: inline-block;\r\n}\r\n\r\n.sidebar>.projects>.division>img {\r\n    width: calc(calc(3vw + 5vh) / 4);\r\n    height: auto;\r\n    margin: 0 calc(calc(3vw + 5vh) / 4);\r\n}\r\n\r\n.sidebar .division:hover {\r\n    background-color: #577590;\r\n}\r\n\r\n.sidebar .selected {\r\n    background-color: #577590;\r\n}"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],A=t.base?s[0]+t.base:s[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=r(d),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var p=a(f,t);t.byIndex=c,e.splice(c,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=r(o[i]);e[c].references--}for(var s=t(n,a),A=0;A<o.length;A++){var l=r(o[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},648:(n,e,r)=>{n.exports=r.p+"19f244ecb11218b9a7de.ttf"},287:(n,e,r)=>{n.exports=r.p+"f7a72dfa6e8c4f239ede.ttf"}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.m=n,r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var a=t.length-1;a>-1&&!n;)n=t[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0;var t={};(()=>{r.d(t,{$6:()=>x,ef:()=>k,q:()=>j,Lg:()=>E,g0:()=>q});var n=r(379),e=r.n(n),a=r(795),o=r.n(a),i=r(569),c=r.n(i),s=r(565),A=r.n(s),l=r(216),d=r.n(l),u=r(589),f=r.n(u),p=r(426),v={};function m(n){let e=[];return{getName:function(){return n},getTasks:function(){return e},addTask:function(n){e.push(n)},removeTask:function(n){e.filter((e=>n.equals(e)))}}}function h(){document.querySelectorAll("div.division").forEach((n=>n.addEventListener("click",(n=>{if("All"===n.target.id)w(j,x);else if("Today"===n.target.id)w(j,E);else if("Week"===n.target.id)w(j,q);else if("Important"===n.target.id)w(j,k);else for(let e=0;e<j.length;e++)n.target.id===j[e].getName()&&w(j,j[e])}))))}v.styleTagTransform=f(),v.setAttributes=A(),v.insert=c().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=d(),e()(p.Z,v),p.Z&&p.Z.locals&&p.Z.locals;const g=r.p+"2b63d8cbe6c8f4280ad4.svg",C=r.p+"3efcb2c4f942b01673bc.svg",b=r.p+"85abddfeb1d5707b7180.svg",y=r.p+"dba2a01ff507dfa95dd9.svg",I=r.p+"65b05fb47286d5deb5f9.svg",B=r.p+"4d2bf1fb16fb508fd1fe.svg";function w(n,e){document.querySelector(".header>img").src=g,function(n,e){document.querySelector("#All>img").src=C,document.querySelector("#Today>img").src=b,document.querySelector("#Week>img").src=y,document.querySelector("#Important>img").src=I,document.querySelector("#All").className="division",document.querySelector("#Today").className="division",document.querySelector("#Week").className="division",document.querySelector("#Important").className="division";const r=document.querySelector(".projects");r.innerHTML="<h2>Projects<h2>";for(let e=0;e<n.length;e++){const t=n[e],a=document.createElement("div");a.className="division",a.id=t.getName();const o=document.createElement("img");o.src=B;const i=document.createElement("h3");i.textContent=t.getName(),a.appendChild(o),a.appendChild(i),r.appendChild(a)}document.querySelector(`#${e.getName()}`).className="division selected",h()}(n,e)}let x=m("All"),E=m("Today"),q=m("Week"),k=m("Important"),j=[m("Home"),m("School"),m("Work")];w(j,x),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,